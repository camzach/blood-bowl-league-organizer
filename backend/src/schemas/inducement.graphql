type Inducements {
  basic: [BasicInducement!]!
  starPlayers: [StarPlayer!]!
  wizards: [Wizard!]!
  infamousCoachingStaff: [InfamousCoachingStaff!]!
  biasedRefs: [BiasedRef!]!
}

type BasicInducement {
  name: String!
  max: Int!
  price: Int
  specialPrices: [SpecialPrice!]
}

type StarPlayer {
  name: String!
  MA: Int!
  ST: Int!
  PA: Int
  AG: Int!
  AV: Int!
  skills: [String!]!
  specialRules: String!
  price: Int!
  specialPrices: [SpecialPrice!]
  playsFor: [String!]
  doesntPlayFor: [String!]
}

type Wizard {
  name: String!
  price: Int!
  specialPrices: [SpecialPrice!]
}

type InfamousCoachingStaff {
  name: String!
  price: Int!
  specialPrices: [SpecialPrice!]
}

type BiasedRef {
  name: String!
  price: Int!
  specialPrices: [SpecialPrice!]
}

type SpecialPrice {
  rule: String!
  price: Int!
}

extend type Query {
  inducements(specialRules: [String!]): Inducements!
}
