@use "sass:list";

.scene {
  width: var(--sceneSize);
  height: var(--sceneSize);
  perspective: 100rem;
  display: inline;
}

$dieFaces: (
  (
    "https://upload.wikimedia.org/wikipedia/commons/4/40/U%2B2680.svg",
    rotateX(0)
  ),
  (
    "https://upload.wikimedia.org/wikipedia/commons/b/be/U%2B2683.svg",
    rotateY(90deg)
  ),
  (
    "https://upload.wikimedia.org/wikipedia/commons/a/af/U%2B2682.svg",
    rotateX(180deg)
  ),
  (
    "https://upload.wikimedia.org/wikipedia/commons/1/16/U%2B2681.svg",
    rotateY(-90deg)
  ),
  (
    "https://upload.wikimedia.org/wikipedia/commons/8/82/U%2B2685.svg",
    rotateX(90deg)
  ),
  (
    "https://upload.wikimedia.org/wikipedia/commons/4/42/U%2B2684.svg",
    rotateX(-90deg)
  )
);

.cube {
  --x: -2;
  --y: 4;
  --z: -0.4;
  --size: calc(var(--sceneSize) * 0.6);

  border: none;
  background-color: transparent;
  padding: 0;
  display: inline-flex;
  width: var(--size);
  aspect-ratio: 1;
  position: relative;
  transform-style: preserve-3d;
  @for $n from 1 through 6 {
    @keyframes roll#{$n} {
      50% {
        transform: rotate3d(var(--x), var(--y), var(--z), 360deg);
      }

      100% {
        $tuple: list.nth($dieFaces, $n);
        $rotation: list.nth($tuple, 2);
        transform: $rotation;
      }
    }

    &[data-result="#{$n}"] {
      animation: roll#{$n} 1s cubic-bezier(0.68, -0.55, 0.27, 1.55);
      animation-fill-mode: forwards;
    }
  }
}

.face {
  position: absolute;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-color: white;

  @for $k from 1 through 6 {
    $tuple: list.nth($dieFaces, $k);
    $url: list.nth($tuple, 1);
    $rotation: list.nth($tuple, 2);
    &[data-face="#{$k}"] {
      transform: #{$rotation} translateZ(calc(var(--size) / 2));
      background-image: url($url);
    }
  }
}
